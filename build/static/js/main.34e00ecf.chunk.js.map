{"version":3,"sources":["components/Navigation.js","components/Hero.js","components/About.js","components/Education.js","components/Skills.js","components/Projects.js","components/ChatBox.js","components/Footer.js","components/WorkExperience.js","App.js","utils/sectionObserver.js","reportWebVitals.js","index.js"],"names":["Navigation","_ref","activeSection","scrollToSection","React","createElement","className","Object","entries","hero","about","workexperience","education","skills","projects","map","_ref2","id","name","key","onClick","Hero","useEffect","colors","balls","i","ball","document","classList","add","style","background","Math","floor","random","length","left","concat","top","transform","width","height","push","body","append","forEach","el","to","x","y","animate","duration","direction","fill","iterations","Infinity","easing","remove","href","About","expandPassion","setExpandPassion","useState","expandLearning","setExpandLearning","expandCollab","setExpandCollab","expandFunFacts","setExpandFunFacts","role","aria-label","Education","VerticalTimeline","VerticalTimelineElement","date","iconStyle","color","icon","FontAwesomeIcon","faGraduationCap","softSkillsData","value","technicalSkillsData","COLORS","Skills","ResponsiveContainer","PieChart","Pie","data","dataKey","nameKey","cx","cy","outerRadius","label","entry","index","Cell","Legend","Tooltip","description","githubUrl","Projects","padding","maxWidth","margin","listStyleType","project","marginBottom","border","borderRadius","transition","cursor","window","open","onMouseOver","e","currentTarget","onMouseOut","Modal","setAppElement","ChatBox","isOpen","onClose","recipientName","message","setMessage","error","setError","success","setSuccess","onRequestClose","contentLabel","overlayClassName","onSubmit","preventDefault","trim","templateParams","recipient_name","user_message","user_email","emailjs","send","then","response","console","log","status","text","err","onChange","target","placeholder","type","Footer","isChatOpen","setIsChatOpen","handleChatToggle","rel","WorkExp","title","company","job","item","App","setActiveSection","sections","querySelectorAll","observer","IntersectionObserver","isIntersecting","threshold","section","observe","observeSections","handleScroll","scrollPosition","scrollY","getElementById","offsetTop","addEventListener","removeEventListener","overflowX","overflowY","sectionId","scrollIntoView","behavior","WorkExperience","openChat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.34e00ecf.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Navigation({ activeSection, scrollToSection }) {\r\n  const section = {\r\n    hero: 'Home',\r\n    about: 'About Me',\r\n    workexperience: 'Work Experience',\r\n    education: 'Education',\r\n    skills: 'Skills',\r\n    projects: 'Projects',\r\n    };\r\n\r\n  return (\r\n    <nav className=\"navigation\">\r\n      <ul className=\"nav-links\">\r\n        {Object.entries(section).map(([id, name]) => (\r\n          <li key={id} className={activeSection === id ? 'active' : ''}>\r\n            <button onClick={() => scrollToSection(id)}>\r\n              {name}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n\r\n\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\n/*import './Hero.css'; // Assuming you're adding the styles here.*/\r\n\r\n\r\n\r\nconst Hero = () => {\r\n  useEffect(() => {\r\n    // Colors for the balls\r\n    const colors = [\r\n      \"rgba(250, 208, 46, 0.5)\", // Soft yellow with 50% opacity\r\n      \"rgba(242, 141, 53, 0.5)\", // Light orange with 50% opacity\r\n      \"rgba(242, 95, 92, 0.5)\",  // Soft pink with 50% opacity\r\n      \"rgba(106, 76, 147, 0.5)\", // Lavender purple with 50% opacity\r\n      \"rgba(72, 169, 166, 0.5)\"  // Soft teal with 50% opacity\r\n    ];\r\n\r\n    const numBalls = 100;\r\n    const balls = [];\r\n\r\n    // Create balls\r\n    for (let i = 0; i < numBalls; i++) {\r\n      let ball = document.createElement(\"div\");\r\n      ball.classList.add(\"ball\");\r\n      ball.style.background = colors[Math.floor(Math.random() * colors.length)];\r\n      ball.style.left = `${Math.floor(Math.random() * 100)}vw`;\r\n      ball.style.top = `${Math.floor(Math.random() * 100)}vh`;\r\n      ball.style.transform = `scale(${Math.random()})`;\r\n      ball.style.width = `${Math.random() * 3 + 1}em`; // Ball size between 1 and 4 em\r\n      ball.style.height = ball.style.width;\r\n\r\n      balls.push(ball);\r\n      document.body.append(ball);\r\n    }\r\n\r\n    // Keyframes animation for balls\r\n    balls.forEach((el, i) => {\r\n      let to = {\r\n        x: Math.random() * (i % 2 === 0 ? -11 : 11),\r\n        y: Math.random() * 12\r\n      };\r\n\r\n      el.animate(\r\n        [\r\n          { transform: \"translate(0, 0)\" },\r\n          { transform: `translate(${to.x}rem, ${to.y}rem)` }\r\n        ],\r\n        {\r\n          duration: (Math.random() + 1) * 2000, // random duration\r\n          direction: \"alternate\",\r\n          fill: \"both\",\r\n          iterations: Infinity,\r\n          easing: \"ease-in-out\"\r\n        }\r\n      );\r\n    });\r\n\r\n    // Cleanup the created balls when the component unmounts\r\n    return () => {\r\n      balls.forEach(ball => {\r\n        ball.remove();\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <section id=\"hero\" className=\"section\">\r\n    <section id=\"larger-header\" className=\"hero\">\r\n      <div className=\"container\">\r\n        <h1>Pankti Parikh</h1>\r\n        <p className=\"hero-subtitle\">Computer Science Engineer | Retail Manager</p>\r\n        <div className=\"hero-links\">\r\n          <a href=\"mailto:parikhpankti023@gmail.com\" className=\"hero-link\">\r\n            <i className=\"fas fa-envelope\"></i> Email\r\n          </a>\r\n          <a href=\"https://www.linkedin.com/in/panktiparikh023\" className=\"hero-link\">\r\n            <i className=\"fab fa-linkedin\"></i> LinkedIn\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import React, { useState } from 'react';\r\n/*import './AboutMe.css';*/\r\n\r\n\r\n\r\nconst About = () => {\r\n  const [expandPassion, setExpandPassion] = useState(false);\r\n  const [expandLearning, setExpandLearning] = useState(false);\r\n  const [expandCollab, setExpandCollab] = useState(false);\r\n  const [expandFunFacts, setExpandFunFacts] = useState(false);\r\n\r\n  return (\r\n    <section id=\"about\" className=\"section\">\r\n    <div className=\"container\">\r\n      <div className=\"about-me-container\">\r\n        <div className=\"header\">\r\n          <h1 className=\"heading\"><span role=\"img\" aria-label=\"sparkles\">✨</span> Hey! I'm Pankti Parikh <span role=\"img\" aria-label=\"sparkles\">✨</span></h1>\r\n          <p className=\"intro-paragraph\">\r\n            A dedicated tech enthusiast with a knack for bridging customer experience and technical expertise! From retail management to exploring the realms of artificial intelligence and cloud computing, I've embraced every challenge with curiosity and resilience.\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"grid-container\">\r\n          <div \r\n            className={`grid-item passion ${expandPassion ? 'expanded' : ''}`} \r\n            onClick={() => setExpandPassion(!expandPassion)}\r\n          >\r\n            <h4 className=\"subheading\"><span role=\"img\" aria-label=\"heart\">💕</span> Passionate About</h4>\r\n            {expandPassion && <p className=\"paragraph\">I'm passionate about the intersection of technology and customer experience, especially in areas like cloud solutions, AI-powered applications, and effective team management. I'm always eager to keep up with industry trends and develop skills that help drive meaningful impact in the tech world.</p>}\r\n          </div>\r\n\r\n          <div \r\n            className={`grid-item learning ${expandLearning ? 'expanded' : ''}`} \r\n            onClick={() => setExpandLearning(!expandLearning)}\r\n          >\r\n            <h4 className=\"subheading\"><span role=\"img\" aria-label=\"pen\">✒️</span> Current Learning</h4>\r\n            {expandLearning && <p className=\"paragraph\">Currently, I'm building on my experiences by learning more about software development practices and enhancing my knowledge in areas like networking, system administration, and data analytics. Having a strong foundation in computer engineering and cloud computing, I'm well-equipped to take on complex technical roles and contribute effectively.</p>}\r\n          </div>\r\n\r\n          <div \r\n            className={`grid-item collab ${expandCollab ? 'expanded' : ''}`} \r\n            onClick={() => setExpandCollab(!expandCollab)}\r\n          >\r\n            <h4 className=\"subheading\"><span role=\"img\" aria-label=\"handshake\">🤝</span> Open to Collaborations</h4>\r\n            {expandCollab && <p className=\"paragraph\">I'm open to collaborating on projects that focus on improving system efficiency, developing scalable cloud solutions, and enhancing customer support experiences in SaaS environments. I’m also interested in connecting with communities that promote tech-driven solutions for everyday problems.</p>}\r\n          </div>\r\n\r\n          <div \r\n            className={`grid-item fun-facts ${expandFunFacts ? 'expanded' : ''}`} \r\n            onClick={() => setExpandFunFacts(!expandFunFacts)}\r\n          >\r\n            <h4 className=\"subheading\"><span role=\"img\" aria-label=\"nerd face\">🤓</span>Fun Facts</h4>\r\n            {expandFunFacts && (\r\n              <p className=\"paragraph\">\r\n                I absolutely love cooking! When I'm not in front of a screen, I'm in the kitchen experimenting with new recipes. I'm also learning DJing—mixing tracks and creating beats is something I'm really passionate about.\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default About;","import React from 'react';\r\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\r\nimport 'react-vertical-timeline-component/style.min.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGraduationCap } from '@fortawesome/free-solid-svg-icons';\r\n/*import './Education.css'; // External CSS file for custom styles*/\r\n\r\n\r\nfunction Education() {\r\n  return (\r\n    <section id=\"education\" className=\"section\">\r\n      <div className=\"container\">\r\n        <h2>Education</h2>\r\n        <VerticalTimeline>\r\n          <VerticalTimelineElement\r\n            className=\"vertical-timeline-element--education\"\r\n            date=\"June 2017 - May 2021\"\r\n            iconStyle={{ background: 'rgb(233, 30, 99)', color: '#fff' }}\r\n            icon={<FontAwesomeIcon icon={faGraduationCap} />}\r\n          >\r\n            <h3 className=\"vertical-timeline-element-title\">Bachelor's of Computer Engineering</h3>\r\n            <h4 className=\"vertical-timeline-element-subtitle\">LDRP Institute of Technology and Research, India</h4>\r\n          </VerticalTimelineElement>\r\n          <VerticalTimelineElement\r\n            className=\"vertical-timeline-element--education\"\r\n            date=\"September 2022\"\r\n            iconStyle={{ background: 'rgb(233, 30, 99)', color: '#fff' }}\r\n            icon={<FontAwesomeIcon icon={faGraduationCap} />}\r\n          >\r\n            <h3 className=\"vertical-timeline-element-title\">Post Graduate Certificate - Artificial Intelligence Analysis, Design and Implementation</h3>\r\n            <h4 className=\"vertical-timeline-element-subtitle\">Durham College, Oshawa</h4>\r\n          </VerticalTimelineElement>\r\n          <VerticalTimelineElement\r\n            className=\"vertical-timeline-element--education\"\r\n            date=\"May 2023\"\r\n            iconStyle={{ background: 'rgb(233, 30, 99)', color: '#fff' }}\r\n            icon={<FontAwesomeIcon icon={faGraduationCap} />}\r\n          >\r\n            <h3 className=\"vertical-timeline-element-title\">Post Graduate Certificate - Cloud Computing</h3>\r\n            <h4 className=\"vertical-timeline-element-subtitle\">George Brown College, Toronto</h4>\r\n          </VerticalTimelineElement>\r\n        </VerticalTimeline>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Education;\r\n","import React from \"react\";\r\nimport { PieChart, Pie, Cell, Tooltip, ResponsiveContainer, Legend } from \"recharts\";\r\n\r\nconst softSkillsData = [\r\n  { name: \"Customer Service\", value: 100 },\r\n  { name: \"Problem Solving\", value: 90 },\r\n  { name: \"Communication\", value: 95 },\r\n  { name: \"Leadership\", value: 85 },\r\n];\r\n\r\nconst technicalSkillsData = [\r\n  { name: \"Python\", value: 90 },\r\n  { name: \"React\", value: 95 },\r\n  { name: \"AI/ML\", value: 90 },\r\n  { name: \"C++\", value: 75 },\r\n  { name: \"Windows\", value: 85 },\r\n  { name: \"Microsoft 360\", value: 80 },\r\n  { name: \"AWS/Azure\", value: 75 }\r\n];\r\n\r\nconst COLORS = [\"#8884d8\", \"#8dd1e1\", \"#82ca9d\", \"#ffc658\", \"#ff8042\", \"#a4de6c\", \"#f0a500\"];\r\n\r\nconst Skills = () => {\r\n  return (\r\n    <section id=\"skills\" className=\"section\">\r\n      <h2>Skills</h2>\r\n        <div className=\"skills-charts\">\r\n          {/* Soft Skills Pie Chart */}\r\n          <div className=\"chart-container\">\r\n            <h3>Soft Skills</h3>\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n              <PieChart>\r\n                <Pie\r\n                  data={softSkillsData}\r\n                  dataKey=\"value\"\r\n                  nameKey=\"name\"\r\n                  cx=\"50%\"\r\n                  cy=\"50%\"\r\n                  outerRadius={100}\r\n                  fill=\"#8884d8\"\r\n                  label\r\n                >\r\n                  {softSkillsData.map((entry, index) => (\r\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                  ))}\r\n                </Pie>\r\n                <Legend />\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n\r\n          {/* Technical Skills Pie Chart */}\r\n          <div className=\"chart-container\">\r\n            <h3>Technical Skills</h3>\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n              <PieChart>\r\n                <Pie\r\n                  data={technicalSkillsData}\r\n                  dataKey=\"value\"\r\n                  nameKey=\"name\"\r\n                  cx=\"50%\"\r\n                  cy=\"50%\"\r\n                  outerRadius={100}\r\n                  fill=\"#82ca9d\"\r\n                  label\r\n                >\r\n                  {technicalSkillsData.map((entry, index) => (\r\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                  ))}\r\n                </Pie>\r\n                <Tooltip />\r\n                <Legend />\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n      </section>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n","import React from \"react\";\r\n\r\nconst projects = [\r\n  {\r\n    name: \"AI-Powered Generative Chatbot Development\",\r\n    description: [\r\n      \"Developed an interactive chatbot system incorporating sophisticated language models, optimizing user interaction and enhancing user support processes using python.\",\r\n      \"Engineered a responsive chatbot solution, significantly reducing users query resolution time and improving user engagement through dynamic conversational interfaces.\"\r\n    ],\r\n    githubUrl: \"https://github.com/pankti023/AI-Powered-Generative-Chatbot-Development-main\",\r\n  },\r\n  {\r\n    name: \"Generative image using stable diffusion\",\r\n    description: [\r\n      \"Implementation of a Stable Diffusion model for generative image synthesis.\",\r\n      \"Integration of the model into a Streamlit web application for interactive image generation in python.\"\r\n    ],\r\n    githubUrl: \"https://github.com/pankti023/Image-generation-using-stable-diffusion\",\r\n  },\r\n  {\r\n    name: \"Multi-Model Optimized route finding system\",\r\n    description: [\r\n      \"Utilization of Folium for interactive visualization of routes and geographical data, enhancing user understanding and engagement.\",\r\n      \"Incorporation of image processing techniques and OpenCV for pre-processing spatial data, enabling accurate feature extraction and analysis within the root-finding process. Additionally, implementation of the A* algorithm for optimal path-finding in graph-based representations of spatial data. Finally, deployment of the system using Streamlit for creating intuitive and interactive web-based interfaces, facilitating user interaction and feedback.\"\r\n    ],\r\n    githubUrl: \"https://github.com/pankti023/Multi-Modal-Route-Finding-System\",\r\n  },\r\n  {\r\n    name: \"Face Recognition\",\r\n    description: [\r\n      \"Face Regonition using OpenCV and Image Processing techniques.\"\r\n    ],\r\n    githubUrl: \"https://github.com/pankti023/Face-Recognition\",\r\n  },\r\n  {\r\n    name: \"React App\",\r\n    description: [\r\n      \"My Web Portfolio\"\r\n    ],\r\n    githubUrl: \"https://github.com/pankti023/MyReactApp\",\r\n  },\r\n    \r\n];\r\n\r\nconst Projects = () => {\r\n  return (\r\n  <section id=\"projects\" className=\"section\">\r\n    <div className=\"container\">\r\n      <h2>Projects</h2>\r\n      <div style={{ padding: \"20px\", maxWidth: \"800px\", margin: \"0 auto\" }}>\r\n      <ul style={{ listStyleType: \"none\", padding: 0 }}>\r\n        {projects.map((project, index) => (\r\n          <li\r\n            key={index}\r\n            style={{\r\n              marginBottom: \"15px\",\r\n              border: \"1px solid #ddd\",\r\n              borderRadius: \"8px\",\r\n              padding: \"10px\",\r\n              transition: \"transform 0.2s\",\r\n              cursor: \"pointer\",\r\n            }}\r\n            onClick={() => window.open(project.githubUrl, \"_blank\")}\r\n            onMouseOver={(e) => (e.currentTarget.style.transform = \"scale(1.02)\")}\r\n            onMouseOut={(e) => (e.currentTarget.style.transform = \"scale(1)\")}\r\n          >\r\n            <h3 style={{ margin: \"0 0 5px 0\", color: \"#007acc\" }}>{project.name}</h3>\r\n            <p style={{ margin: 0 }}>{project.description}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n    </div>\r\n  </section>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React, { useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport emailjs from 'emailjs-com';\r\n\r\nModal.setAppElement('#root');\r\n\r\nfunction ChatBox({ isOpen, onClose, recipientName }) {\r\n  const [message, setMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!message.trim()) {\r\n      setError('Message cannot be empty.');\r\n      return;\r\n    }\r\n\r\n    // EmailJS parameters\r\n    const templateParams = {\r\n      recipient_name: recipientName,\r\n      user_message: message,\r\n      user_email: 'parikhpankti023@gmail.com', // Replace with your email address\r\n    };\r\n\r\n    emailjs\r\n      .send(\r\n        'service_pankti', // Replace with your EmailJS service ID\r\n        'template_bey6gvi', // Replace with your EmailJS template ID\r\n        templateParams,\r\n        'nEQSV1bEvzks9vKjE' // Replace with your EmailJS user ID\r\n      )\r\n      .then(\r\n        (response) => {\r\n          console.log('Email sent successfully:', response.status, response.text);\r\n          setSuccess('Message sent successfully!');\r\n          setMessage('');\r\n          setError('');\r\n        },\r\n        (err) => {\r\n          console.error('Failed to send email:', err);\r\n          setError('Failed to send the message. Please try again.');\r\n        }\r\n      );\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onRequestClose={onClose}\r\n      contentLabel=\"Chat Box\"\r\n      className=\"chat-modal\"\r\n      overlayClassName=\"chat-overlay\"\r\n    >\r\n      <h2>Chat with {recipientName}</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          placeholder=\"Type your message here...\"\r\n        />\r\n        {error && <p className=\"error\">{error}</p>}\r\n        {success && <p className=\"success\">{success}</p>}\r\n        <button type=\"submit\" className=\"send-btn\">Send</button>\r\n      </form>\r\n      <button onClick={onClose} className=\"close-btn\">Close</button>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ChatBox;\r\n\r\n","import React, { useState } from 'react';\r\n/*import './Footer.css';*/\r\nimport ChatBox from './ChatBox'; // Import your ChatBox component\r\n\r\nconst Footer = () => {\r\n  const [isChatOpen, setIsChatOpen] = useState(false); // Manage chat modal state\r\n\r\n  const handleChatToggle = () => {\r\n    setIsChatOpen(!isChatOpen); // Toggle chat modal open/close\r\n  };\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"social-icons\">\r\n        {/* Mail Icon */}\r\n        <a href=\"mailto:your-email@example.com\" className=\"social-icon\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <i className=\"fas fa-envelope\"></i>\r\n        </a>\r\n        {/* LinkedIn Icon */}\r\n        <a href=\"https://www.linkedin.com/in/your-linkedin-profile\" className=\"social-icon\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <i className=\"fab fa-linkedin\"></i>\r\n        </a>\r\n      </div>\r\n\r\n      {/* Chat Button */}\r\n      <button className=\"chat-button\" onClick={handleChatToggle}>Chat with Me</button>\r\n\r\n      <p>&copy; 2024 Pankti Parikh </p>\r\n\r\n      {/* Conditional Rendering of ChatBox */}\r\n      {isChatOpen && <ChatBox isOpen={isChatOpen} onClose={handleChatToggle} />}\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n/*import './WorkExperience.css';*/\r\n\r\n\r\n\r\nfunction WorkExp() {\r\n    const WorkExperience = [\r\n        {\r\n            title: 'Assistant Service Manager',\r\n            company: 'Farmboy Inc.',\r\n            duration: 'January 2023 – Present',\r\n            description: [\r\n                'Manage day-to-day operations of the service department.',\r\n                'Lead and coordinate a team of customer service associates.',\r\n                'Ensure customer satisfaction and resolve escalated issues.',\r\n                'Assist in training and onboarding new employees.',\r\n                'Collaborate with cross-functional teams to improve processes.'\r\n            ]\r\n        },\r\n        {\r\n            title: 'System Administrator',\r\n            company: 'Vedang Enterprise',\r\n            duration: 'July 2021 – January 2022',\r\n            description: [\r\n                'Managed and maintained company’s IT infrastructure.',\r\n                'Ensured network security and performed system backups.',\r\n                'Provided technical support and troubleshooting for staff.',\r\n                'Performed routine software and hardware updates.'\r\n            ]\r\n        },\r\n        {\r\n            title: 'Research Associate',\r\n            company: 'AI Hub',\r\n            duration: 'June 2022 – September 2022',\r\n            description: [\r\n                'Worked on AI/ML projects to develop innovative solutions.',\r\n                'Conducted research and experiments on AI models.',\r\n                'Collaborated with teams to analyze and process data.',\r\n                'Assisted in the development of algorithms and models.'\r\n            ]\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <section id=\"workexperience\" className=\"section\">\r\n        <div className='container'>\r\n        <h2>Work Experience</h2>\r\n            <div className=\"experience-list\">\r\n                {WorkExperience.map((job, index) => (\r\n                    <div key={index} className=\"experience-item\">\r\n                        <h3>{job.title}</h3>\r\n                        <p className=\"company\">{job.company}</p>\r\n                        <p className=\"duration\">{job.duration}</p>\r\n                        <ul className=\"job-description\">\r\n                            {job.description.map((item, i) => (\r\n                                <li key={i}>{item}</li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                 ))}\r\n            </div>\r\n        </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default WorkExp;","import React, { useState, useEffect } from 'react';\r\nimport Navigation from './components/Navigation';\r\nimport Hero from './components/Hero';\r\nimport About from './components/About';\r\nimport Education from './components/Education';\r\nimport Skills from './components/Skills';\r\nimport Projects from './components/Projects';\r\nimport Footer from './components/Footer';\r\nimport ChatBox from './components/ChatBox';\r\nimport WorkExperience from './components/WorkExperience'\r\nimport { observeSections } from './utils/sectionObserver';\r\n\r\nfunction App() {\r\n  const [isChatOpen, setIsChatOpen] = useState(false);\r\n  const [activeSection, setActiveSection] = useState('hero');\r\n\r\n  useEffect(() => {\r\n    observeSections();\r\n\r\n    const handleScroll = () => {\r\n      const sections = ['hero', 'about', 'workexperience', 'education', 'skills', 'projects'];\r\n      const scrollPosition = window.scrollY;\r\n\r\n      for (let i = sections.length - 1; i >= 0; i--) {\r\n        const section = document.getElementById(sections[i]);\r\n        if (section && section.offsetTop <= scrollPosition + 100) {\r\n          setActiveSection(sections[i]);\r\n          break;\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, []);\r\n\r\n  const scrollToSection = (sectionId) => {\r\n    const section = document.getElementById(sectionId);\r\n    if (section) {\r\n      section.scrollIntoView({ behavior: 'smooth' });\r\n      setActiveSection(sectionId);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n    <div style={{overflowX:'hidden',overflowY:'hidden', width:'100%'}}>\r\n      <Navigation activeSection={activeSection} scrollToSection={scrollToSection} />\r\n      <Hero />\r\n      <About />\r\n      <WorkExperience/>\r\n      <Education />\r\n      <Skills />\r\n      <Projects />\r\n      <Footer openChat={() => setIsChatOpen(true)} />\r\n      <ChatBox isOpen={isChatOpen} onClose={() => setIsChatOpen(false)} />\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export function observeSections() {\r\n  const sections = document.querySelectorAll('.section');\r\n  \r\n  const observer = new IntersectionObserver((entries) => {\r\n    entries.forEach(entry => {\r\n      if (entry.isIntersecting) {\r\n        entry.target.classList.add('active');\r\n      } else {\r\n        entry.target.classList.remove('active');\r\n      }\r\n    });\r\n  }, { threshold: 0.1 });\r\n\r\n  sections.forEach(section => {\r\n    observer.observe(section);\r\n  });\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}